![xxx_logo](/media/cover/xxx_logo.png)

	+ [Introduction](#introduction)
- [1. What Is Design and Architecture?](#what-is-design-and-architecture?)
	+ [The Goal](#the-goal)
	+ [Case Study](#case-study)
	+ [Conclusion](#conclusion)
- [2. A Tale of Two Values](#a-tale-of-two-values)
	+ [Behavior](#behavior)
	+ [Architecture](#architecture)
	+ [The Greater Value](#the-greater-value)
	+ [Eisenhower’s Matrix](#eisenhower’s-matrix)
	+ [Fight for the Architecture](#fight-for-the-architecture)
	+ [Starting with the Bricks: Programming Paradigms](#starting-with-the-bricks:-programming-paradigms)
- [3. Paradigm Overview](#paradigm-overview)
	+ [Structured Programming](#structured-programming)
	+ [Object-Oriented Programming](#object-oriented-programming)
	+ [Functional Programming](#functional-programming)
	+ [Food for Thought](#food-for-thought)
	+ [Conclusion](#conclusion)
- [4. Structured Programming](#structured-programming)
	+ [Proof](#proof)
	+ [A Harmful Proclamation](#a-harmful-proclamation)
	+ [Functional Decomposition](#functional-decomposition)
	+ [No Formal Proofs](#no-formal-proofs)
	+ [Science to the Rescue](#science-to-the-rescue)
	+ [TestsConclusion](#testsconclusion)
- [5. Object-Oriented Programming](#object-oriented-programming)
	+ [Encapsulation?](#encapsulation?)
	+ [Inheritance?](#inheritance?)
	+ [Polymorphism?](#polymorphism?)
	+ [Conclusion](#conclusion)
- [6. Functional Programming](#functional-programming)
	+ [Squares of Integers](#squares-of-integers)
	+ [Immutability and Architecture](#immutability-and-architecture)
	+ [Segregation of Mutability](#segregation-of-mutability)
	+ [Event Sourcing](#event-sourcing)
	+ [Conclusion](#conclusion)
	+ [Design Principles](#design-principles)
- [7. SRP: The Single Responsibility Principle](#srp:-the-single-responsibility-principle)
	+ [Symptom 1: Accidental Duplication](#symptom-1:-accidental-duplication)
	+ [Symptom 2: Merges](#symptom-2:-merges)
	+ [Solutions](#solutions)
	+ [Conclusion](#conclusion)
- [8. OCP: The Open-Closed Principle](#ocp:-the-open-closed-principle)
	+ [A Thought Experiment](#a-thought-experiment)
	+ [Directional Control](#directional-control)
	+ [Information Hiding](#information-hiding)
	+ [Conclusion](#conclusion)
- [9. LSP: The Liskov Substitution Principle](#lsp:-the-liskov-substitution-principle)
	+ [Guiding the Use of Inheritance](#guiding-the-use-of-inheritance)
	+ [The Square/Rectangle Problem](#the-square/rectangle-problem)
	+ [LSP and Architecture](#lsp-and-architecture)
	+ [Example LSP Violation](#example-lsp-violation)
	+ [Conclusion](#conclusion)
- [10. ISP: The Interface Segregation Principle](#isp:-the-interface-segregation-principle)
	+ [ISP and Language](#isp-and-language)
	+ [ISP and Architecture](#isp-and-architecture)
	+ [Conclusion](#conclusion)
- [11. DIP: The Dependency Inversion Principle](#dip:-the-dependency-inversion-principle)
	+ [Stable Abstractions](#stable-abstractions)
	+ [Factories](#factories)
	+ [Concrete Components](#concrete-components)
	+ [Conclusion](#conclusion)
	+ [Component Principles](#component-principles)
- [12. Components](#components)
	+ [A Brief History of Components](#a-brief-history-of-components)
	+ [Relocatability](#relocatability)
	+ [Linkers](#linkers)
	+ [Conclusion](#conclusion)
- [13. Component Cohesion](#component-cohesion)
	+ [The Reuse/Release Equivalence Principle](#the-reuse/release-equivalence-principle)
	+ [The Common Closure Principle](#the-common-closure-principle)
	+ [The Common Reuse Principle](#the-common-reuse-principle)
	+ [The Tension Diagram for Component Cohesion](#the-tension-diagram-for-component-cohesion)
- [14. Component Coupling](#component-coupling)
	+ [The Acyclic Dependencies Principle](#the-acyclic-dependencies-principle)
	+ [Top-Down Design](#top-down-design)
	+ [The Stable Dependencies Principle](#the-stable-dependencies-principle)
	+ [The Stable Abstractions Principle](#the-stable-abstractions-principle)
	+ [Conclusion](#conclusion)
	+ [Architecture](#architecture)
- [15. What Is Architecture?](#what-is-architecture?)
	+ [Development](#development)
	+ [Deployment](#deployment)
	+ [Operation](#operation)
	+ [Maintenance](#maintenance)
	+ [Keeping Options Open](#keeping-options-open)
	+ [Device Independence](#device-independence)
	+ [Junk Mail](#junk-mail)
	+ [Physical Addressing](#physical-addressing)
	+ [Conclusion](#conclusion)

---

<h3 id="introduction">Introduction</h3>

// TODO: add of Introduction


---

<h2 id="what-is-design-and-architecture?">1. What Is Design and Architecture?</h2>

<h3 id="the-goal">The Goal</h3>

// TODO: add of The Goal

<h3 id="case-study">Case Study</h3>

// TODO: add of Case Study

<h3 id="conclusion">Conclusion</h3>

// TODO: add of Conclusion


---

<h2 id="a-tale-of-two-values">2. A Tale of Two Values</h2>

<h3 id="behavior">Behavior</h3>

// TODO: add of Behavior

<h3 id="architecture">Architecture</h3>

// TODO: add of Architecture

<h3 id="the-greater-value">The Greater Value</h3>

// TODO: add of The Greater Value

<h3 id="eisenhower’s-matrix">Eisenhower’s Matrix</h3>

// TODO: add of Eisenhower’s Matrix

<h3 id="fight-for-the-architecture">Fight for the Architecture</h3>

// TODO: add of Fight for the Architecture

<h3 id="starting-with-the-bricks:-programming-paradigms">Starting with the Bricks: Programming Paradigms</h3>

// TODO: add of Starting with the Bricks: Programming Paradigms


---

<h2 id="paradigm-overview">3. Paradigm Overview</h2>

<h3 id="structured-programming">Structured Programming</h3>

// TODO: add of Structured Programming

<h3 id="object-oriented-programming">Object-Oriented Programming</h3>

// TODO: add of Object-Oriented Programming

<h3 id="functional-programming">Functional Programming</h3>

// TODO: add of Functional Programming

<h3 id="food-for-thought">Food for Thought</h3>

// TODO: add of Food for Thought

<h3 id="conclusion">Conclusion</h3>

// TODO: add of Conclusion


---

<h2 id="structured-programming">4. Structured Programming</h2>

<h3 id="proof">Proof</h3>

// TODO: add of Proof

<h3 id="a-harmful-proclamation">A Harmful Proclamation</h3>

// TODO: add of A Harmful Proclamation

<h3 id="functional-decomposition">Functional Decomposition</h3>

// TODO: add of Functional Decomposition

<h3 id="no-formal-proofs">No Formal Proofs</h3>

// TODO: add of No Formal Proofs

<h3 id="science-to-the-rescue">Science to the Rescue</h3>

// TODO: add of Science to the Rescue

<h3 id="testsconclusion">TestsConclusion</h3>

// TODO: add of TestsConclusion


---

<h2 id="object-oriented-programming">5. Object-Oriented Programming</h2>

<h3 id="encapsulation?">Encapsulation?</h3>

// TODO: add of Encapsulation?

<h3 id="inheritance?">Inheritance?</h3>

// TODO: add of Inheritance?

<h3 id="polymorphism?">Polymorphism?</h3>

// TODO: add of Polymorphism?

<h3 id="conclusion">Conclusion</h3>

// TODO: add of Conclusion


---

<h2 id="functional-programming">6. Functional Programming</h2>

<h3 id="squares-of-integers">Squares of Integers</h3>

// TODO: add of Squares of Integers

<h3 id="immutability-and-architecture">Immutability and Architecture</h3>

// TODO: add of Immutability and Architecture

<h3 id="segregation-of-mutability">Segregation of Mutability</h3>

// TODO: add of Segregation of Mutability

<h3 id="event-sourcing">Event Sourcing</h3>

// TODO: add of Event Sourcing

<h3 id="conclusion">Conclusion</h3>

// TODO: add of Conclusion

<h3 id="design-principles">Design Principles</h3>

// TODO: add of Design Principles


---

<h2 id="srp:-the-single-responsibility-principle">7. SRP: The Single Responsibility Principle</h2>

<h3 id="symptom-1:-accidental-duplication">Symptom 1: Accidental Duplication</h3>

// TODO: add of Symptom 1: Accidental Duplication

<h3 id="symptom-2:-merges">Symptom 2: Merges</h3>

// TODO: add of Symptom 2: Merges

<h3 id="solutions">Solutions</h3>

// TODO: add of Solutions

<h3 id="conclusion">Conclusion</h3>

// TODO: add of Conclusion


---

<h2 id="ocp:-the-open-closed-principle">8. OCP: The Open-Closed Principle</h2>

<h3 id="a-thought-experiment">A Thought Experiment</h3>

// TODO: add of A Thought Experiment

<h3 id="directional-control">Directional Control</h3>

// TODO: add of Directional Control

<h3 id="information-hiding">Information Hiding</h3>

// TODO: add of Information Hiding

<h3 id="conclusion">Conclusion</h3>

// TODO: add of Conclusion


---

<h2 id="lsp:-the-liskov-substitution-principle">9. LSP: The Liskov Substitution Principle</h2>

<h3 id="guiding-the-use-of-inheritance">Guiding the Use of Inheritance</h3>

// TODO: add of Guiding the Use of Inheritance

<h3 id="the-square/rectangle-problem">The Square/Rectangle Problem</h3>

// TODO: add of The Square/Rectangle Problem

<h3 id="lsp-and-architecture">LSP and Architecture</h3>

// TODO: add of LSP and Architecture

<h3 id="example-lsp-violation">Example LSP Violation</h3>

// TODO: add of Example LSP Violation

<h3 id="conclusion">Conclusion</h3>

// TODO: add of Conclusion


---

<h2 id="isp:-the-interface-segregation-principle">10. ISP: The Interface Segregation Principle</h2>

<h3 id="isp-and-language">ISP and Language</h3>

// TODO: add of ISP and Language

<h3 id="isp-and-architecture">ISP and Architecture</h3>

// TODO: add of ISP and Architecture

<h3 id="conclusion">Conclusion</h3>

// TODO: add of Conclusion


---

<h2 id="dip:-the-dependency-inversion-principle">11. DIP: The Dependency Inversion Principle</h2>

<h3 id="stable-abstractions">Stable Abstractions</h3>

// TODO: add of Stable Abstractions

<h3 id="factories">Factories</h3>

// TODO: add of Factories

<h3 id="concrete-components">Concrete Components</h3>

// TODO: add of Concrete Components

<h3 id="conclusion">Conclusion</h3>

// TODO: add of Conclusion

<h3 id="component-principles">Component Principles</h3>

// TODO: add of Component Principles


---

<h2 id="components">12. Components</h2>

<h3 id="a-brief-history-of-components">A Brief History of Components</h3>

// TODO: add of A Brief History of Components

<h3 id="relocatability">Relocatability</h3>

// TODO: add of Relocatability

<h3 id="linkers">Linkers</h3>

// TODO: add of Linkers

<h3 id="conclusion">Conclusion</h3>

// TODO: add of Conclusion


---

<h2 id="component-cohesion">13. Component Cohesion</h2>

<h3 id="the-reuse/release-equivalence-principle">The Reuse/Release Equivalence Principle</h3>

// TODO: add of The Reuse/Release Equivalence Principle

<h3 id="the-common-closure-principle">The Common Closure Principle</h3>

// TODO: add of The Common Closure Principle

<h3 id="the-common-reuse-principle">The Common Reuse Principle</h3>

// TODO: add of The Common Reuse Principle

<h3 id="the-tension-diagram-for-component-cohesion">The Tension Diagram for Component Cohesion</h3>

// TODO: add of The Tension Diagram for Component Cohesion


---

<h2 id="component-coupling">14. Component Coupling</h2>

<h3 id="the-acyclic-dependencies-principle">The Acyclic Dependencies Principle</h3>

// TODO: add of The Acyclic Dependencies Principle

<h3 id="top-down-design">Top-Down Design</h3>

// TODO: add of Top-Down Design

<h3 id="the-stable-dependencies-principle">The Stable Dependencies Principle</h3>

// TODO: add of The Stable Dependencies Principle

<h3 id="the-stable-abstractions-principle">The Stable Abstractions Principle</h3>

// TODO: add of The Stable Abstractions Principle

<h3 id="conclusion">Conclusion</h3>

// TODO: add of Conclusion

<h3 id="architecture">Architecture</h3>

// TODO: add of Architecture


---

<h2 id="what-is-architecture?">15. What Is Architecture?</h2>

<h3 id="development">Development</h3>

// TODO: add of Development

<h3 id="deployment">Deployment</h3>

// TODO: add of Deployment

<h3 id="operation">Operation</h3>

// TODO: add of Operation

<h3 id="maintenance">Maintenance</h3>

// TODO: add of Maintenance

<h3 id="keeping-options-open">Keeping Options Open</h3>

// TODO: add of Keeping Options Open

<h3 id="device-independence">Device Independence</h3>

// TODO: add of Device Independence

<h3 id="junk-mail">Junk Mail</h3>

// TODO: add of Junk Mail

<h3 id="physical-addressing">Physical Addressing</h3>

// TODO: add of Physical Addressing

<h3 id="conclusion">Conclusion</h3>

// TODO: add of Conclusion

evelopment">Development</h3>

// TODO: add of Development

<h3 id="deployment">Deployment</h3>

// TODO: add of Deployment

<h3 id="operation">Operation</h3>

// TODO: add of Operation

<h3 id="maintenance">Maintenance</h3>

// TODO: add of Maintenance

<h3 id="keeping-options-open">Keeping Options Open</h3>

// TODO: add of Keeping Options Open

<h3 id="device-independence">Device Independence</h3>

// TODO: add of Device Independence

<h3 id="junk-mail">Junk Mail</h3>

// TODO: add of Junk Mail

<h3 id="physical-addressing">Physical Addressing</h3>

// TODO: add of Physical Addressing

<h3 id="conclusion">Conclusion</h3>

// TODO: add of Conclusion

