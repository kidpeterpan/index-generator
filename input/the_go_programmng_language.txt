0. Preface
The Origins of Go
The Go Project
Organization of the Book
Where to Find More Information
Acknowledgments
1. Tutorial
Hello, World
Command-Line Arguments
Finding Duplicate Lines
Animated GIFs
Fetching a URL
Fetching URLs Concurrently
A Web Server
Loose Ends
2. Program Structure
Names
Declarations
Variables
Assignments
Type Declarations
Packages and Files
Scope
3. Basic Data Types
Integers
Floating-Point Numbers
Complex Numbers
Booleans
Strings
Constants
4. Composite Types
Arrays
Slices
Maps
Structs
JSON
Text and HTML Templates
5. Functions
Function Declarations
Recursion
Multiple Return Values
Errors
Function Values
Anonymous Functions
Variadic Functions
Deferred Function Calls
Panic
Recover
6. Methods
Method Declarations
Methods with a Pointer Receiver
Composing Types by Struct Embedding
Method Values and Expressions
Example: Bit Vector Type
Encapsulation
7. Interfaces
Interfaces as Contracts
Interface Types
Interface Satisfaction
Parsing Flags with flag.Value
Interface Values
Sorting with sort.Interface
The http.Handler Interface
The error interface
Example: Expression Evaluator
Type Assertions
Discriminating Errors with Type Assertions
Querying Behaviors with Interface Type Assertions
Type Switches
Example: Token-Based XML Decoding
A Few Words of Advice
8. Goroutines and Channels
Goroutines
Example: Concurrent Clock Server
Example: Concurrent Echo Server
Channels
Looping in Parallel
Example: Concurrent Web Crawler
Multiplexing with select
Example: Concurrent Directory Traversal
Cancellation
Example: Chat Server
9. Concurrency with Shared Variables
Race Conditions
Mutual Exclusion: sync.Mutex
Read/Write Mutexes: sync.RWMutex
Memory Synchronization
Lazy Initialization: sync.Once
The Race Detector
Example: Concurrent Non-Blocking Cache
Goroutines and Threads
10. Package and the Go Tool
Introduction
Import Paths
The Package Declaration
Import Declarations
Blank Imports
Packages and Naming
The Go Tool
11. Testing
The go test Tool
Test Functions
Coverage
Benchmark Functions
Profiling
Example Functions
12. Reflection
Why Reflection?
reflect.Type and reflect.Value
Display, a Recursive Value Printer
Example: Encoding S-Expressions
Setting Variables with reflect.Value
Example: Decoding S-Expressions
Accessing Struct Field Tags
Displaying the Methods of a Type
A Word of Caution
13. Low-Level Programming
unsafe.Sizeof, Alignof, and Offsetof
unsafe.Pointer
Example: Deep Equivalence
Calling C Code with cgo
Another Word of Caution
